# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
# Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

# Python 3.9.1
# 64 разрядная

import sys


def s(obj):
    return print(sys.getsizeof(obj))


#homewokrk_1_2  ----  наиболее эффективное

x = 5
s(x) #28
y = 6
s(y) #28

print(bin(5),  bin(6)) # числа побитово
print(
    f" побитовое И {x&y}\n", # логическое умножение, побитово на выходе 100
    f"побитовое ИЛИ {x|y}\n", # логическое сложение, побитово на выходе 111
    f"побитовое исключающее ИЛИ {x ^ y}\n", # логическое исключающее сложение, побитово на выходе 011
    f"побитовое НЕ {~x, ~y}\n", # побитовое отрицание, инвертирует все биты операнда, знак результата также противоположный
)

print(x<<2) # побитовый сдвиг влево. Операнд умножается на 2**N(число сдвигов)
print(x>>2)

# 56



# homework_2_3
value = input("Введите число: ")
s(value) # динамическая, не меньше 50

if value.isdigit():
    print(value[::-1])
else:
    print("Ошибка")

# >50



#homework_3_2

values = [8, 3, 15, 6, 4, 2]
s(values)
even = []

for i in range(len(values)):
    if values[i] % 2 == 0:
        even.append(i)

s(even)
print(even)

#240